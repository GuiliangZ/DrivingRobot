07/07/2025

1. In Baseline_Computer.py:
	a. test if SOC_STOP feature works - it will automatically stop at specific SOC (SOC_Stop)
	b. test if CP2112 and PCA9685 can work flawlessly on a personal computer instead of Jetson
	c. Modify the Ts (system updating frequency) to find the best minimum Ts - reduce I value in the PID gains as change of the system bandwidth will change the performance of the PID controller and the gains should change accordingly. The P gains was ot affected that much by the frequency. The lower Ts we get, the more play room we have on the DeePC calculation time.
	d. Ideally collect the data use newly tunned PID controller with new slower frequency from 100% - 80% SOC running on consecutive WLTP, and repeat the test with same initial condition using DeePC algorithm. - compile it once to generate the C code - which may take longer, and then use the previously generated solver at run time in the later run. (with the same DeePC parameters setup) - everytime updating DeePC parameters, need to recompile. 
	e. could also try PID auto-tunning block for find the best PID values
	
